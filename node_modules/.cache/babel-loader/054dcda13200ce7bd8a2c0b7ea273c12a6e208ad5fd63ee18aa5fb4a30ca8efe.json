{"ast":null,"code":"var _jsxFileName = \"/Users/chef/Downloads/recipe-mvp/src/IngredientRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredientCosts = {\n  Flour: {\n    unitCost: 0.02,\n    unit: \"g\"\n  },\n  Butter: {\n    unitCost: 0.10,\n    unit: \"g\"\n  },\n  Eggs: {\n    unitCost: 0.25,\n    unit: \"each\"\n  },\n  Sugar: {\n    unitCost: 0.015,\n    unit: \"g\"\n  }\n};\nfunction calculateLineCost(qty, ingredientName) {\n  const costData = ingredientCosts[ingredientName];\n  if (!costData) return 0;\n  return parseFloat((qty * costData.unitCost).toFixed(2));\n}\nexport default function IngredientRow() {\n  _s();\n  const [ingredientLine, setIngredientLine] = useState({\n    qty: '',\n    unit: '',\n    ingredient: '',\n    lineCost: 0\n  });\n  function handleChange(field, value) {\n    const updatedLine = {\n      ...ingredientLine,\n      [field]: value\n    };\n    if (field === 'qty' || field === 'ingredient') {\n      const qty = parseFloat(updatedLine.qty) || 0;\n      updatedLine.lineCost = calculateLineCost(qty, updatedLine.ingredient);\n    }\n    setIngredientLine(updatedLine);\n  }\n\n  // ✅ This is the correct place to start the return block:\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-3xl mx-auto bg-white shadow-lg rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-gray-800\",\n      children: \"Ingredient Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-6 gap-4 items-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Qty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"e.g. 100\",\n          value: ingredientLine.qty,\n          onChange: e => handleChange('qty', e.target.value),\n          className: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Unit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"g / each\",\n          value: ingredientLine.unit,\n          onChange: e => handleChange('unit', e.target.value),\n          className: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Flour / Butter\",\n          value: ingredientLine.ingredient,\n          onChange: e => handleChange('ingredient', e.target.value),\n          className: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 text-lg font-semibold text-gray-800 mt-6\",\n        children: [\"Line Cost: $\", ingredientLine.lineCost.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(IngredientRow, \"zCO1FI3QnNFIRo0FXylbPYUOWhM=\");\n_c = IngredientRow;\nvar _c;\n$RefreshReg$(_c, \"IngredientRow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ingredientCosts","Flour","unitCost","unit","Butter","Eggs","Sugar","calculateLineCost","qty","ingredientName","costData","parseFloat","toFixed","IngredientRow","_s","ingredientLine","setIngredientLine","ingredient","lineCost","handleChange","field","value","updatedLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/chef/Downloads/recipe-mvp/src/IngredientRow.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ingredientCosts = {\n  Flour: { unitCost: 0.02, unit: \"g\" },\n  Butter: { unitCost: 0.10, unit: \"g\" },\n  Eggs: { unitCost: 0.25, unit: \"each\" },\n  Sugar: { unitCost: 0.015, unit: \"g\" }\n};\n\nfunction calculateLineCost(qty, ingredientName) {\n  const costData = ingredientCosts[ingredientName];\n  if (!costData) return 0;\n  return parseFloat((qty * costData.unitCost).toFixed(2));\n}\n\nexport default function IngredientRow() {\n  const [ingredientLine, setIngredientLine] = useState({\n    qty: '',\n    unit: '',\n    ingredient: '',\n    lineCost: 0,\n  });\n\n  function handleChange(field, value) {\n    const updatedLine = {\n      ...ingredientLine,\n      [field]: value,\n    };\n\n    if (field === 'qty' || field === 'ingredient') {\n      const qty = parseFloat(updatedLine.qty) || 0;\n      updatedLine.lineCost = calculateLineCost(qty, updatedLine.ingredient);\n    }\n\n    setIngredientLine(updatedLine);\n  }\n\n  // ✅ This is the correct place to start the return block:\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto bg-white shadow-lg rounded-lg\">\n      <h2 className=\"text-2xl font-semibold mb-6 text-gray-800\">Ingredient Line</h2>\n      <div className=\"grid grid-cols-6 gap-4 items-end\">\n        <div className=\"col-span-1\">\n          <label className=\"block text-sm font-medium text-gray-700\">Qty</label>\n          <input\n            type=\"number\"\n            placeholder=\"e.g. 100\"\n            value={ingredientLine.qty}\n            onChange={(e) => handleChange('qty', e.target.value)}\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <label className=\"block text-sm font-medium text-gray-700\">Unit</label>\n          <input\n            type=\"text\"\n            placeholder=\"g / each\"\n            value={ingredientLine.unit}\n            onChange={(e) => handleChange('unit', e.target.value)}\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n          />\n        </div>\n\n        <div className=\"col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">Ingredient</label>\n          <input\n            type=\"text\"\n            placeholder=\"Flour / Butter\"\n            value={ingredientLine.ingredient}\n            onChange={(e) => handleChange('ingredient', e.target.value)}\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2\"\n          />\n        </div>\n\n        <div className=\"col-span-2 text-lg font-semibold text-gray-800 mt-6\">\n          Line Cost: ${ingredientLine.lineCost.toFixed(2)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}