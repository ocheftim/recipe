{"ast":null,"code":"var _jsxFileName = \"/Users/chef/Downloads/recipe-mvp/src/RecipeEditor.js\",\n  _s = $RefreshSig$();\n// src/RecipeEditor.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport IngredientManager from \"./IngredientManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeEditor() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const initialTitle = searchParams.get(\"title\") || \"Untitled Recipe\";\n  const returnTo = searchParams.get(\"returnTo\");\n  const [recipeTitle, setRecipeTitle] = useState(initialTitle);\n  const [ingredients, setIngredients] = useState([]);\n\n  // Load from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem(recipeTitle);\n    if (saved) {\n      try {\n        setIngredients(JSON.parse(saved));\n      } catch (e) {\n        console.error(\"Failed to parse saved recipe\", e);\n      }\n    } else {\n      setIngredients([createEmptyIngredient()]);\n    }\n  }, [recipeTitle]);\n  const createEmptyIngredient = () => ({\n    qty: \"\",\n    unit: \"\",\n    category: \"\",\n    subcategory: \"\",\n    ingredient: \"\",\n    modifier: \"\",\n    cost: \"\",\n    isSubrecipe: false\n  });\n  const handleReturn = () => {\n    if (returnTo) {\n      navigate(`/recipe?title=${returnTo}`);\n    }\n  };\n  const saveRecipe = () => {\n    localStorage.setItem(recipeTitle, JSON.stringify(ingredients));\n    alert(\"Recipe saved!\");\n  };\n  const exportRecipe = () => {\n    const blob = new Blob([JSON.stringify({\n      title: recipeTitle,\n      ingredients\n    }, null, 2)], {\n      type: \"application/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = `${recipeTitle}.json`;\n    link.click();\n  };\n  const importRecipe = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      try {\n        const data = JSON.parse(evt.target.result);\n        if (data.title) setRecipeTitle(data.title);\n        if (data.ingredients) setIngredients(data.ingredients);\n      } catch (e) {\n        alert(\"Invalid recipe file\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: recipeTitle,\n        onChange: e => setRecipeTitle(e.target.value),\n        className: \"text-2xl font-bold w-full max-w-lg border-b-2 focus:outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), returnTo && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReturn,\n        className: \"ml-4 text-sm text-blue-600 hover:underline\",\n        children: [\"\\u2190 Return to \", returnTo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IngredientManager, {\n      ingredients: ingredients,\n      setIngredients: setIngredients,\n      createEmptyIngredient: createEmptyIngredient,\n      recipeTitle: recipeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveRecipe,\n        className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",\n        children: \"Save Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportRecipe,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Export JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"cursor-pointer bg-gray-200 px-4 py-2 rounded hover:bg-gray-300\",\n        children: [\"Import JSON\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/json\",\n          className: \"hidden\",\n          onChange: importRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeEditor, \"GwYT/Xb+ELaK1kzSL85cNKbFOdY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RecipeEditor;\nexport default RecipeEditor;\nvar _c;\n$RefreshReg$(_c, \"RecipeEditor\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","IngredientManager","jsxDEV","_jsxDEV","RecipeEditor","_s","location","navigate","searchParams","URLSearchParams","search","initialTitle","get","returnTo","recipeTitle","setRecipeTitle","ingredients","setIngredients","saved","localStorage","getItem","JSON","parse","e","console","error","createEmptyIngredient","qty","unit","category","subcategory","ingredient","modifier","cost","isSubrecipe","handleReturn","saveRecipe","setItem","stringify","alert","exportRecipe","blob","Blob","title","type","link","document","createElement","href","URL","createObjectURL","download","click","importRecipe","file","target","files","reader","FileReader","onload","evt","data","result","readAsText","className","children","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","_c","$RefreshReg$"],"sources":["/Users/chef/Downloads/recipe-mvp/src/RecipeEditor.js"],"sourcesContent":["// src/RecipeEditor.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport IngredientManager from \"./IngredientManager\";\n\nfunction RecipeEditor() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const initialTitle = searchParams.get(\"title\") || \"Untitled Recipe\";\n  const returnTo = searchParams.get(\"returnTo\");\n\n  const [recipeTitle, setRecipeTitle] = useState(initialTitle);\n  const [ingredients, setIngredients] = useState([]);\n\n  // Load from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem(recipeTitle);\n    if (saved) {\n      try {\n        setIngredients(JSON.parse(saved));\n      } catch (e) {\n        console.error(\"Failed to parse saved recipe\", e);\n      }\n    } else {\n      setIngredients([createEmptyIngredient()]);\n    }\n  }, [recipeTitle]);\n\n  const createEmptyIngredient = () => ({\n    qty: \"\",\n    unit: \"\",\n    category: \"\",\n    subcategory: \"\",\n    ingredient: \"\",\n    modifier: \"\",\n    cost: \"\",\n    isSubrecipe: false,\n  });\n\n  const handleReturn = () => {\n    if (returnTo) {\n      navigate(`/recipe?title=${returnTo}`);\n    }\n  };\n\n  const saveRecipe = () => {\n    localStorage.setItem(recipeTitle, JSON.stringify(ingredients));\n    alert(\"Recipe saved!\");\n  };\n\n  const exportRecipe = () => {\n    const blob = new Blob([JSON.stringify({ title: recipeTitle, ingredients }, null, 2)], {\n      type: \"application/json\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = `${recipeTitle}.json`;\n    link.click();\n  };\n\n  const importRecipe = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      try {\n        const data = JSON.parse(evt.target.result);\n        if (data.title) setRecipeTitle(data.title);\n        if (data.ingredients) setIngredients(data.ingredients);\n      } catch (e) {\n        alert(\"Invalid recipe file\");\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  return (\n    <div className=\"p-6 space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <input\n          value={recipeTitle}\n          onChange={(e) => setRecipeTitle(e.target.value)}\n          className=\"text-2xl font-bold w-full max-w-lg border-b-2 focus:outline-none\"\n        />\n        {returnTo && (\n          <button\n            onClick={handleReturn}\n            className=\"ml-4 text-sm text-blue-600 hover:underline\"\n          >\n            ← Return to {returnTo}\n          </button>\n        )}\n      </div>\n\n      <IngredientManager\n        ingredients={ingredients}\n        setIngredients={setIngredients}\n        createEmptyIngredient={createEmptyIngredient}\n        recipeTitle={recipeTitle}\n      />\n\n      <div className=\"flex space-x-4\">\n        <button\n          onClick={saveRecipe}\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n        >\n          Save Recipe\n        </button>\n\n        <button\n          onClick={exportRecipe}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n        >\n          Export JSON\n        </button>\n\n        <label className=\"cursor-pointer bg-gray-200 px-4 py-2 rounded hover:bg-gray-300\">\n          Import JSON\n          <input\n            type=\"file\"\n            accept=\"application/json\"\n            className=\"hidden\"\n            onChange={importRecipe}\n          />\n        </label>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}