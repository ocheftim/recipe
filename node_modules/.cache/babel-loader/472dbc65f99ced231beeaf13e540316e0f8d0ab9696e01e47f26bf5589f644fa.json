{"ast":null,"code":"var _jsxFileName = \"/Users/chef/Downloads/recipe-mvp/src/NewRecipeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { RecipeContext } from './context/RecipeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewRecipeForm = () => {\n  _s();\n  const {\n    addRecipe\n  } = useContext(RecipeContext);\n  const [text, setText] = useState('');\n  const [recipeName, setRecipeName] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n  const handleSubmit = () => {\n    if (!text.trim()) return;\n    const lines = text.trim().split('\\n');\n    const ingredients = lines.map(line => ({\n      name: line,\n      quantity: '',\n      cost: ''\n    }));\n    const newRecipe = {\n      name: recipeName || 'Untitled (Pasted)',\n      yield: recipeYield || '',\n      ingredients\n    };\n    addRecipe(newRecipe);\n    setText('');\n    setRecipeName('');\n    setRecipeYield('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 mb-3\",\n      onClick: () => document.getElementById('paste-form').classList.toggle('hidden'),\n      children: \"+ New Recipe (Paste Mode)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"paste-form\",\n      className: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 border mb-2\",\n        placeholder: \"Recipe Name\",\n        value: recipeName,\n        onChange: e => setRecipeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 border mb-2\",\n        placeholder: \"Yield (portions)\",\n        value: recipeYield,\n        onChange: e => setRecipeYield(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border mb-2\",\n        rows: 5,\n        placeholder: \"Paste ingredients list here...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        onClick: handleSubmit,\n        children: \"Import Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NewRecipeForm, \"ynAvtm1gc5Lfp6iP9YYG0hYQeVU=\");\n_c = NewRecipeForm;\nexport default NewRecipeForm;\nvar _c;\n$RefreshReg$(_c, \"NewRecipeForm\");","map":{"version":3,"names":["React","useState","useContext","RecipeContext","jsxDEV","_jsxDEV","NewRecipeForm","_s","addRecipe","text","setText","recipeName","setRecipeName","recipeYield","setRecipeYield","handleSubmit","trim","lines","split","ingredients","map","line","name","quantity","cost","newRecipe","yield","className","children","onClick","document","getElementById","classList","toggle","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","onChange","e","target","rows","_c","$RefreshReg$"],"sources":["/Users/chef/Downloads/recipe-mvp/src/NewRecipeForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { RecipeContext } from './context/RecipeContext';\n\nconst NewRecipeForm = () => {\n  const { addRecipe } = useContext(RecipeContext);\n  const [text, setText] = useState('');\n  const [recipeName, setRecipeName] = useState('');\n  const [recipeYield, setRecipeYield] = useState('');\n\n  const handleSubmit = () => {\n    if (!text.trim()) return;\n\n    const lines = text.trim().split('\\n');\n    const ingredients = lines.map(line => ({\n      name: line,\n      quantity: '',\n      cost: '',\n    }));\n\n    const newRecipe = {\n      name: recipeName || 'Untitled (Pasted)',\n      yield: recipeYield || '',\n      ingredients,\n    };\n\n    addRecipe(newRecipe);\n    setText('');\n    setRecipeName('');\n    setRecipeYield('');\n  };\n\n  return (\n    <div className=\"mb-6\">\n      <button\n        className=\"bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 mb-3\"\n        onClick={() => document.getElementById('paste-form').classList.toggle('hidden')}\n      >\n        + New Recipe (Paste Mode)\n      </button>\n\n      <div id=\"paste-form\" className=\"hidden\">\n        <input\n          className=\"w-full p-2 border mb-2\"\n          placeholder=\"Recipe Name\"\n          value={recipeName}\n          onChange={(e) => setRecipeName(e.target.value)}\n        />\n        <input\n          className=\"w-full p-2 border mb-2\"\n          placeholder=\"Yield (portions)\"\n          value={recipeYield}\n          onChange={(e) => setRecipeYield(e.target.value)}\n        />\n        <textarea\n          className=\"w-full p-2 border mb-2\"\n          rows={5}\n          placeholder=\"Paste ingredients list here...\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          onClick={handleSubmit}\n        >\n          Import Recipe\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipeForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}