{"ast":null,"code":"var _jsxFileName = \"/Users/chef/Downloads/recipe-mvp/src/IngredientRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredientCosts = {\n  Flour: {\n    unitCost: 0.02,\n    unit: \"g\"\n  },\n  Butter: {\n    unitCost: 0.10,\n    unit: \"g\"\n  },\n  Eggs: {\n    unitCost: 0.25,\n    unit: \"each\"\n  },\n  Sugar: {\n    unitCost: 0.015,\n    unit: \"g\"\n  }\n};\nfunction calculateLineCost(qty, ingredientName) {\n  const costData = ingredientCosts[ingredientName];\n  if (!costData) return 0;\n  return parseFloat((qty * costData.unitCost).toFixed(2));\n}\n\n// ✅ This line is absolutely required:\nexport default function IngredientRow() {\n  _s();\n  const [ingredientLine, setIngredientLine] = useState({\n    qty: '',\n    unit: '',\n    ingredient: '',\n    lineCost: 0\n  });\n  function handleChange(field, value) {\n    const updatedLine = {\n      ...ingredientLine,\n      [field]: value\n    };\n    if (field === 'qty' || field === 'ingredient') {\n      const qty = parseFloat(updatedLine.qty) || 0;\n      updatedLine.lineCost = calculateLineCost(qty, updatedLine.ingredient);\n    }\n    setIngredientLine(updatedLine);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto bg-white shadow-md rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Ingredient Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Qty\",\n        value: ingredientLine.qty,\n        onChange: e => handleChange('qty', e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Unit\",\n        value: ingredientLine.unit,\n        onChange: e => handleChange('unit', e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingredient\",\n        value: ingredientLine.ingredient,\n        onChange: e => handleChange('ingredient', e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 text-gray-700 font-semibold\",\n        children: [\"Line Cost: $\", ingredientLine.lineCost.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(IngredientRow, \"zCO1FI3QnNFIRo0FXylbPYUOWhM=\");\n_c = IngredientRow;\nvar _c;\n$RefreshReg$(_c, \"IngredientRow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ingredientCosts","Flour","unitCost","unit","Butter","Eggs","Sugar","calculateLineCost","qty","ingredientName","costData","parseFloat","toFixed","IngredientRow","_s","ingredientLine","setIngredientLine","ingredient","lineCost","handleChange","field","value","updatedLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/chef/Downloads/recipe-mvp/src/IngredientRow.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ingredientCosts = {\n  Flour: { unitCost: 0.02, unit: \"g\" },\n  Butter: { unitCost: 0.10, unit: \"g\" },\n  Eggs: { unitCost: 0.25, unit: \"each\" },\n  Sugar: { unitCost: 0.015, unit: \"g\" }\n};\n\nfunction calculateLineCost(qty, ingredientName) {\n  const costData = ingredientCosts[ingredientName];\n  if (!costData) return 0;\n  return parseFloat((qty * costData.unitCost).toFixed(2));\n}\n\n// ✅ This line is absolutely required:\nexport default function IngredientRow() {\n  const [ingredientLine, setIngredientLine] = useState({\n    qty: '',\n    unit: '',\n    ingredient: '',\n    lineCost: 0,\n  });\n\n  function handleChange(field, value) {\n    const updatedLine = {\n      ...ingredientLine,\n      [field]: value,\n    };\n\n    if (field === 'qty' || field === 'ingredient') {\n      const qty = parseFloat(updatedLine.qty) || 0;\n      updatedLine.lineCost = calculateLineCost(qty, updatedLine.ingredient);\n    }\n\n    setIngredientLine(updatedLine);\n  }\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto bg-white shadow-md rounded\">\n      <h1 className=\"text-xl font-bold mb-4\">Ingredient Line</h1>\n      <div className=\"grid grid-cols-5 gap-2 items-center\">\n        <input\n          type=\"number\"\n          placeholder=\"Qty\"\n          value={ingredientLine.qty}\n          onChange={(e) => handleChange('qty', e.target.value)}\n          className=\"border p-2 rounded\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Unit\"\n          value={ingredientLine.unit}\n          onChange={(e) => handleChange('unit', e.target.value)}\n          className=\"border p-2 rounded\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Ingredient\"\n          value={ingredientLine.ingredient}\n          onChange={(e) => handleChange('ingredient', e.target.value)}\n          className=\"border p-2 rounded\"\n        />\n        <div className=\"col-span-2 text-gray-700 font-semibold\">\n          Line Cost: ${ingredientLine.lineCost.toFixed(2)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}